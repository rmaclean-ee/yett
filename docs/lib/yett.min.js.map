{"version":3,"file":"yett.min.js","sources":["../../src/checks.js","../../src/variables.js","../../src/observer.js","../../src/monkey.js"],"sourcesContent":["import { patterns, TYPE_ATTRIBUTE } from './variables';\n\nexport const isOnBlocklist = (src, type) =>\n  src &&\n  (!type || type !== TYPE_ATTRIBUTE) &&\n  (!patterns.blocklist || patterns.blocklist.some((pattern) => pattern.test(src)));\n","export const TYPE_ATTRIBUTE = 'javascript/blocked'\n\nexport const patterns = {\n    blocklist: [/monetate\\.net/],\n}","import { TYPE_ATTRIBUTE } from './variables'\nimport {isOnBlocklist } from './checks'\n\n// Setup a mutation observer to track DOM insertion\nexport const observer = new MutationObserver(mutations => {\n    for (let i = 0; i < mutations.length; i++) {\n        const { addedNodes } = mutations[i];\n        for(let i = 0; i < addedNodes.length; i++) {\n            const node = addedNodes[i]\n            // For each added script tag\n            if(node.nodeType === 1 && node.tagName === 'SCRIPT') {\n                const src = node.src\n                const type = node.type\n                // If the src is inside the blocklist and is not inside the approved list\n                if(isOnBlocklist(src, type)) {\n                    // Blocks inline script execution in Safari & Chrome\n                    node.type = TYPE_ATTRIBUTE\n\n                    // Firefox has this additional event which prevents scripts from being executed\n                    const beforeScriptExecuteListener = function (event) {\n                        // Prevent only marked scripts from executing\n                        if(node.getAttribute('type') === TYPE_ATTRIBUTE)\n                            event.preventDefault()\n                        node.removeEventListener('beforescriptexecute', beforeScriptExecuteListener)\n                    }\n                    node.addEventListener('beforescriptexecute', beforeScriptExecuteListener)\n\n                    // Remove the node from the DOM\n                    node.parentElement && node.parentElement.removeChild(node)\n                }\n            }\n        }\n    }\n})\n\n// Starts the monitoring\nobserver.observe(document.documentElement, {\n    childList: true,\n    subtree: true\n})","import { TYPE_ATTRIBUTE } from './variables'\nimport { isOnBlocklist } from './checks'\n\nconst createElementBackup = document.createElement\n\nconst originalDescriptors = {\n    src: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'src'),\n    type: Object.getOwnPropertyDescriptor(HTMLScriptElement.prototype, 'type')\n}\n\n// Monkey patch the createElement method to prevent dynamic scripts from executing\ndocument.createElement = function(...args) {\n    // If this is not a script tag, bypass\n    if(args[0].toLowerCase() !== 'script')\n        return createElementBackup.bind(document)(...args)\n\n    const scriptElt = createElementBackup.bind(document)(...args)\n\n    // Define getters / setters to ensure that the script type is properly set\n    try {\n        Object.defineProperties(scriptElt, {\n            'src': {\n                get() {\n                    return originalDescriptors.src.get.call(this)\n                },\n                set(value) {\n                    if(isOnBlocklist(value, scriptElt.type)) {\n                        originalDescriptors.type.set.call(this, TYPE_ATTRIBUTE)\n                    }\n                    originalDescriptors.src.set.call(this, value)\n                }\n            },\n            'type': {\n                set(value) {\n                    const typeValue = isOnBlocklist(scriptElt.src, scriptElt.type) ? TYPE_ATTRIBUTE : value\n                    originalDescriptors.type.set.call(this, typeValue)\n                }\n            }\n        })\n\n        // Monkey patch the setAttribute function so that the setter is called instead\n        scriptElt.setAttribute = function(name, value) {\n            if(name === 'type' || name === 'src')\n                scriptElt[name] = value\n            else\n                HTMLScriptElement.prototype.setAttribute.call(scriptElt, name, value)\n        }\n    } catch (error) {\n        // eslint-disable-next-line\n        console.warn(\n            'Yett: unable to prevent script execution for script src ', scriptElt.src, '.\\n',\n            'A likely cause would be because you are using a third-party browser extension that monkey patches the \"document.createElement\" function.'\n        )\n    }\n    return scriptElt\n}"],"names":["isOnBlocklist","src","type","TYPE_ATTRIBUTE","patterns","blocklist","some","pattern","test","MutationObserver","mutations","i","length","addedNodes","node","nodeType","tagName","addEventListener","beforeScriptExecuteListener","event","getAttribute","preventDefault","removeEventListener","parentElement","removeChild","observe","document","documentElement","childList","subtree","createElementBackup","createElement","originalDescriptors","Object","getOwnPropertyDescriptor","HTMLScriptElement","prototype","args","toLowerCase","bind","scriptElt","defineProperties","get","call","this","set","value","typeValue","setAttribute","name","error","console","warn"],"mappings":"0FAE6B,SAAhBA,EAAiBC,EAAKC,UACjCD,KACEC,GAAQA,IAASC,MACjBC,EAASC,WAAaD,EAASC,UAAUC,KAAK,SAACC,UAAYA,EAAQC,KAAKP,MCLrE,IAAME,EAAiB,qBAEjBC,EAAW,CACpBC,UAAW,CAAC,kBCCQ,IAAII,iBAAiB,SAAAC,OACpC,IAAIC,EAAI,EAAGA,EAAID,EAAUE,OAAQD,YAC1BE,EAAeH,EAAUC,GAAzBE,sBACAF,OACEG,EAAOD,EAAWF,MAEH,IAAlBG,EAAKC,UAAmC,WAAjBD,EAAKE,QAAsB,KAC3Cf,EAAMa,EAAKb,IACXC,EAAOY,EAAKZ,QAEfF,EAAcC,EAAKC,GAAO,CAEzBY,EAAKZ,KAAOC,EASZW,EAAKG,iBAAiB,sBANc,SAA9BC,EAAwCC,GAEvCL,EAAKM,aAAa,UAAYjB,GAC7BgB,EAAME,iBACVP,EAAKQ,oBAAoB,sBAAuBJ,KAKpDJ,EAAKS,eAAiBT,EAAKS,cAAcC,YAAYV,MArBzDH,EAAI,EAAGA,EAAIE,EAAWD,OAAQD,MAA9BA,KA6BPc,QAAQC,SAASC,gBAAiB,CACvCC,WAAW,EACXC,SAAS,ICnCb,IAAMC,EAAsBJ,SAASK,cAE/BC,EAAsB,CACxB/B,IAAKgC,OAAOC,yBAAyBC,kBAAkBC,UAAW,OAClElC,KAAM+B,OAAOC,yBAAyBC,kBAAkBC,UAAW,SAIvEV,SAASK,cAAgB,sCAAYM,2BAAAA,qBAEJ,WAA1BA,EAAK,GAAGC,cACP,OAAOR,EAAoBS,KAAKb,uBAAaW,OAE3CG,EAAYV,EAAoBS,KAAKb,uBAAaW,OAIpDJ,OAAOQ,iBAAiBD,EAAW,KACxB,CACHE,sBACWV,EAAoB/B,IAAIyC,IAAIC,KAAKC,OAE5CC,aAAIC,GACG9C,EAAc8C,EAAON,EAAUtC,OAC9B8B,EAAoB9B,KAAK2C,IAAIF,KAAKC,KAAMzC,GAE5C6B,EAAoB/B,IAAI4C,IAAIF,KAAKC,KAAME,UAGvC,CACJD,aAAIC,OACMC,EAAY/C,EAAcwC,EAAUvC,IAAKuC,EAAUtC,MAAQC,EAAiB2C,EAClFd,EAAoB9B,KAAK2C,IAAIF,KAAKC,KAAMG,OAMpDP,EAAUQ,aAAe,SAASC,EAAMH,GACxB,SAATG,GAA4B,QAATA,EAClBT,EAAUS,GAAQH,EAElBX,kBAAkBC,UAAUY,aAAaL,KAAKH,EAAWS,EAAMH,IAEzE,MAAOI,GAELC,QAAQC,KACJ,2DAA4DZ,EAAUvC,IAAK,MAC3E,mJAGDuC"}